buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = 'com.lovetropics.lib'
archivesBaseName = 'LTLib'

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER')
version = "${mod_version}-" + (buildnumber ? "${release_type}+${buildnumber}" : "SNAPSHOT")

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: minecraft_version
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'ltlib_client'
            
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'ltlib_server'
        
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }
        }
        
        data {
            taskName 'ltlib_data'
        
            workingDirectory project.file('run')
            
            environment 'target', 'fmluserdevdata'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }
            
            args '--mod', 'ltlib', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
                 '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"' 
            
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    shadow group: 'io.netty', name: 'netty-codec-http', version: '4.1.77.Final'
}

jar {
    manifest {
        attributes([
            "FMLModType": "GAMELIBRARY",
            "Specification-Title": "ltlib",
            "Specification-Vendor": "lovetropics",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"lovetropics",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

task sourceJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.java
}

configurations {
    shadow
    compile.extendsFrom shadow
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ''
}

build.dependsOn(shadowJar)

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        }
    }
}
