plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.lovetropics.lib'
base {
    archivesName = 'LTLib'
}

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER')
version = "${mod_version}-" + (buildnumber ? "${release_type}+${buildnumber}" : "SNAPSHOT")

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: minecraft_version

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'ltlib_client'
            copyIdeResources = true

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'ltlib_server'
            copyIdeResources = true

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }
        }

        data {
            taskName 'ltlib_data'
            copyIdeResources = true

            workingDirectory project.file('run')

            environment 'target', 'fmluserdevdata'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltlib {
                    source sourceSets.main
                }
            }

            args '--mod', 'ltlib', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
                 '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"'

        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    shadow ('io.netty:netty-codec-http:4.1.82.Final') {
        transitive = false
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
            "FMLModType": "GAMELIBRARY",
            "Specification-Title": "ltlib",
            "Specification-Vendor": "lovetropics",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"lovetropics",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    archiveClassifier = 'slim'
    finalizedBy 'reobfJar'
}

task sourceJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.java
}

configurations {
    shadow
    implementation.extendsFrom shadow
}

shadowJar {
    configurations = [project.configurations.shadow]
    archiveClassifier = ''
    finalizedBy 'reobfShadowJar'

    ['http', 'rtsp', 'spdy'].forEach {
        relocate "io.netty.handler.codec.$it", "com.lovetropics.lib.repack.io.netty.handler.codec.$it"
    }
}

reobf {
    shadowJar {}
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact shadowJar
            artifact sourceJar
        }
    }

    repositories {
        if (project.hasProperty('mavendir')) {
            maven { url mavendir }
        } else {
            mavenLocal()
        }
    }
}
